======================= В О П Р О С Ы =======================
1. Создать объект User c полями и перекрытым методом finalize
2. Создать несколько объектов User и руками рассчитать сколько он будет занимать памяти.
3. Нужно найти информацию. Сколько памяти занимает пустой объект без полей.
4. Добиться состояния, когда виртуальная машины вызывает сборщик мусора самостоятельно. За счет ключей xmx.
======================= О Т В Е Т Ы =======================
1. Объект User создан, можно увидеть в коде.
2. Например, при создании 10 объектов User(int id, String name) мы получаем использованной памяти
    примерно от 211080 до 294680 байтов, т.е. на 1 объект уходит 20-30 кБайт. А если создавать
    объекты User(int id), то расход памяти уменьшается до примерно 15 кБайт.
    Видим, что при создании одного и того количества объектов на них тратится разное количество байт.
3. Для ответа был создан объект без полей UserEmpty.
    При создании 10 таких объектов получаем расход памяти около 8 кБайт на объект.

    Если сравнивать занятый объем памяти в моей программе и то что написано в статье, то есть не
    стыковка.

    Ссылаясь на информацию из статьи, пустой объект без полей класса будет занимать лишь место заголовка - 8 байт.
    (не совпадение!!!)

    ------информация из статьи-------
    JVM хранит для каждого объекта:
    - Заголовок объекта; (8 байт для х86 и 16 байт для х64)
    - Память для примитивных типов;
    - Память для ссылочных типов;
    - Смещение/выравнивание — по сути, это несколько неиспользуемых байт, что размещаются после данных самого объекта.
      Это сделано для того, чтобы адрес в памяти всегда был кратным машинному слову,
      для ускорения чтения из памяти + уменьшения количества бит для указателя на объект + предположительно для
      уменьшения фрагментации памяти.
    Стоит также отметить, что в java размер любого объекта кратен 8 байтам!
    Итого, пустой объект хранит только заголовок объекта и будет в весить:
    - в х86, 8 байт
    - в х64, 16 байт

    Следовательно, наш объект User с пустым именем будет весить:
        - заголовок: 16 байт
        - поле int id: 4 байт
        - поле String name (пустое): 32 байт
        - выравнивание для кратности 8: X байт
        итого: 16 + 4 + 32 = 42 => выравнивание => 48 байт займется в куче.
    Если имя не пустое, то +2 байта на каждый символ строки.

4. В ходе работы программы было выставлено ограничение доступной памяти до 4 мб. (-Xmx4m -Xms4m)
   В main методе в цикле создаются и выводятся в консоль объекты класса User(int id, String name).
   При создании объектов до 380 шт GC не вызывается. Если 395 и более то вызывается всегда.
   У удаляемых объектов вызывается метод finalize(), видим как выводится информация в консоль,
   после чего объект удаляется из кучи.

//Ссылки на статьи - https://habr.com/ru/post/134102/
//https://habr.com/ru/post/124909/

